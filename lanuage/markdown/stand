#雷达工程标准、模块任务
* 设想
	c++ --> c&&c++ --> 纯c 逐层封装
	initial 使用c++调用sdk，完成雷达层操作，提供c++类型接口给 date,date采用c与c++混编方式，将c++类型数据转为c类型数据,提供数据获取接口给 solve，solve使用纯c完成运算，并把结果返回上层调用
* c++标准
	标准命名空间：uslamp
	标准头文件：uslamp.h
* c标准
	标准头文件：uslam.h
* 要求
	* 每个文件必须配有使用说明及程序简介的注释
	* 严格遵循头文件(.hpp/.h)定义函数，预编译指令，.cpp/.c文件函数具体实现
	* 统一代码风格
	* 最好写好注释
* 模块任务
	* 初始化模块(initial):完成雷达开机自检及错误处理
	* 数据处理模块(date):对从雷达获取的数据进行处理
	* 运算模块(solve):根据极坐标反算地址
* 模块具体要求
---
	initial(c++)
	1.接口定义：
	init::start()接口：
	* ctrlc退出
	* 串口与比特率设置
	* 创建实例(最终返回)
	* 连接雷达
	* 获取设备信息
	* 获取健康信息
	init::stop()接口：
	* 停止马达
	* 删除实例
//	init::error()
//	* 错误判断
	intial::print()
	* 错误输出
	* 设备信息输出
	* 健康信息输出
	* 串口信息输出
---	
	date(c&&c++)
	1.接口定义：
	get(start:end)接口：
	* 获取由start-end角度的所有数据，返回一个c 结构体
---
	solve(c)
	1. 接口定义：
	solve::coordinate()接口：
	* 调用date取得数据，反算坐标，提供上级调用，返回坐标值(实际坐标+偏移坐标)
	solve::circle:
	* 判断是否为圆，如果是，计算直径
	