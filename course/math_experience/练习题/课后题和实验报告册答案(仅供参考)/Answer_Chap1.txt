clc
clear all
close all
%%%% 玫瑰线绘制
%% 法1： polar 命令
theta = 0:0.001:2*pi;
a     = 0.5;
n     = 4;  %% 花瓣数
rho   = a*cos(n*theta);
figure(1); polar(theta,rho);

%% 法2： plot 命令
theta = 0:0.001:2*pi;
a     = 0.5;
n     = 3;
rho   = a*cos(n*theta) ;
x     = rho.*cos(theta);
y     = rho.*sin(theta);
figure(2); plot(x,y,'r:','linewidth',2); axis equal
figure(3); comet(x,y)   %%% 彗星轨迹演示

%% %法3： 符号函数+ezplot
syms t
n   = 4;
rho = cos(n*t);
x   = rho * cos(t);
y   = rho * sin(t);
ezplot(x,y,[0,2*pi]);


%% %%% 星形线，心脏线
t = 0:0.01:2*pi;
x = cos(t).^3;
y = sin(t).^3;
subplot(121); 
plot(x,y,'r--','linewidth',2); axis square %%% 星形状线

theta = 0:0.001:4*pi;
rho   = 1 - cos(theta); %% 或者 1-sin(theta)
x = rho.*cos(theta);
y = rho.*sin(theta);
subplot(122); 
plot(x,y,'linewidth',2); axis square   %%% 心脏线



%% %% 抛物线绘制
alpha = pi/4; 
g  = 9.8;
v0 = 10;
Tn = 2* v0*sin(alpha)/g;           %%% 总运动时间
t  = 0:0.01:Tn;
x  = v0*cos(alpha) * t;            %%% 水平位移
y  = v0*sin(alpha)*t - 0.5*g*t.^2; %%% 竖直位移
plot(x,y,'r');  %%%% 画出一条抛物线

%% %%%%% 模拟一簇曲线
alpha = linspace(0,pi/2,10); 
g  = 9.8;
v0 = 100;
Tn = 2*v0*sin(alpha)/g;           %%% 总运动时间
t  = (1:1000)'*Tn/1000;
x  = v0*t*diag(cos(alpha));            %%% 水平位移
y  = v0*t*diag(sin(alpha)) - 0.5*g*t.^2; %%% 竖直位移
plot(x,y);  %%%% 画出一条抛物线
axis([0 1.2*max(x(:)) 0 max(y(:))])


%%  马鞍面绘制%% 实验步骤和程序
ax = linspace(-10,10,100);   %%%%设置绘图定义域
ay = linspace(-10,10,100); 
[X,Y] = meshgrid(ax,ay);     %%%% 产生网格数据点
Z  = X.^2 - Y.^2;            %%%% 或者Z = X.*Y; 
figure(1); meshc(X,Y,Z); view([50, 100 20]);

%%% 实验结果及分析 如图， 马鞍面是二次曲面，有也叫双曲抛物面，
%%% 用 垂直于x,y 轴的平面截出的截口是抛物线
%%% 用 垂直于z 轴的平面截出的截口是双曲线
%%% 试验结论：
%%% mesh可以对解析几何学中的二次曲面进行成像，从而，类似地可以画出椭球面、
%%% 旋转曲面、锥面、螺旋面等.


%% 习题 4
n = 3;
H = hilb(n); E = eye(n); 
a1= inv(H);  a2 = H\E;
a1-a2
% %  结论：数学上，inv(H) 与 H\E均是求H矩阵的逆矩阵。但是数值
% %  结果表明，当n变大时，两种方法得到的结果会越来越不一样


%% % 习题 5
V = vander([1;2;3]); D = diag(diag(V)); disp(D)
% % 考察diag的用法，diag既可以抽取矩阵的对角元，也
% % 可以生成一个对角矩阵

%% % 习题 6
[x,y] = meshgrid(1:3); H = 1./(x+y-1); 
% % 一定要知道x,y的具体结果，meshgrid 是对二维方形区域分割
% % x是所有的x轴节点，y是所有的y轴节点.
% %  ./是对（x+y-1）中的每个元素去倒数

%% % 习题 7
J = [1;1;1]*[1,2,3]; A = 1./(J+J'-1); 
% %  J 是一个列向量乘以一个行向量，所以J是个3x3矩阵
% % A是对J与J的转置之和，每个元素-1，然后每个元素取倒数得到的

%% % 习题 8
% % 考察如何绘图：有很多绘图方式可以用plot，
%%（1）
x = -1:0.01:1; 
y1= exp(x);
y2= exp(-x);
plot(x,y1,'r',x,y2,'b--','linewidth',2); grid on
xlabel('{\it x} ','fontsize', 18); 
ylabel('function ','fontsize', 18); 
legend('exp(x)','exp(-x)');

%%（2）
x1 = 0:0.01:5;     y1 = log(1+x1);
x2 = 0:0.01:1.8;   y2 = exp(x2)-1;
plot(x1,y1,'r',x2,y2,'b--','linewidth',2); grid on
xlabel('{\it x} ','fontsize', 18); 
ylabel('function ','fontsize', 18); 
legend('ln(x+1)','exp(x)-1');


%% % 习题 9  
% %考察绘制多条曲线，用plot(A,B)的方式，其中A,B都是矩阵
% % plot(A,B)对A的i列与B的i列对应成一条曲线
x = linspace(0,1,20); 
idx = [1 2 3 5 8 12];
Resu=[];
for i = idx
    Resu = [Resu;x.^i];
end
X = ones(6,20)*diag(x);
plot(X',Resu','linewidth',1.5);  
h=legend('x','x^2','x^3','x^5','x^8','x^12'); %%设置图例
set(h,'location','northwest')

    
%% % 习题 10 %法1
% % 依然是考察 plot 在一个图像中绘制多条曲线
x = 0:0.05:2*pi;
y = sin(x);
Tay1 = x;     %% Tay1, ....Tay4是sin(x)的各阶泰勒展开
Tay2 = x-x.^3/factorial(3) + x.^5/factorial(5);  
Tay3 = x-x.^3/factorial(3) + x.^5/factorial(5) -x.^7/factorial(7);
Tay4 = x-x.^3/factorial(3) + x.^5/factorial(5) -x.^7/factorial(7) ...
    + x.^9/factorial(9);
plot(x,y,'k',x,Tay1,':',x,Tay2,':',x,Tay3,':',x,Tay4,':','linewidth',3);
h=legend('sin(x)','1st approx','2nd approx','3rd approx','4th approx');
set(h,'location','southwest') %%%设置图例
grid on ; axis([0 2*pi -4 4]);

%% %%% 法2 直接在命令窗口输入 taylortool,用软件操作
taylortool


%% %% 习题 11
% % 依然考察plot的绘图
r = 2;
t = 0:0.01:6*pi;
x = r*(t-sin(t));  %% x变量的向量
y = r*(1-cos(t));  %% y变量的向量
plot(x,y); legend('摆线'); axis equal;

%% % 习题 12
% % 做法同11题， 依然考察plot的绘图
a = 4; b = 1;
t = 0:0.01:6*pi;
x = (a+b)*cos(t)-b*cos((a+b)*t/b);
y = (a+b)*sin(t)-b*sin((a+b)*t/b);
plot(x,y); axis equal; legend('圆外摆线')




%% % 附加题目： 太极图
r = 1;
t = 0:0.01:2*pi;         x = r*cos(t);       y  = r*sin(t);    %%%大圆
t1= pi/2:0.01:3*pi/2;    x1= 0.5*r*cos(t1);  y1 = 0.5*r*sin(t1)+0.5;
t2= -pi/2:0.01:pi/2;     x2= 0.5*r*cos(t2);  y2 = 0.5*r*sin(t2)-0.5; %% 曲线

xs1 = 0.05*r*cos(t);       ys1  = 0.05*r*sin(t)+0.5;    %%%小环
xs2 = 0.05*r*cos(t);       ys2  = 0.05*r*sin(t)-0.5;    %%%小环


plot(x,y,'k',x1,y1,x2,y2,'b',xs1,ys1,xs2,ys2,'r','linewidth',6); 
axis equal; grid on



%% %%%% 方法一
fun = inline('5*x.^4-x.^3+2*x.^2+3*x-8','x');  %%%% 定义函数
x   =-2:0.0001:2;   %%%% 离散化区间[-2,2]
y   = fun(x);      %%%% 利用fun求在各个离散点处的函数值

Optim   = x(1);    %%%% 预先设定初始最小值
MaxValue= y(1);    %%%% 设置最小函数值

for k=1:length(x)
    if y(k)<MaxValue   %%% 对比函数值，寻找最小
        Optim= x(k);
        MaxValue=y(k);
    end
end
fprintf('最小值点是%3.4f,对应最小值是%3.4f\n',Optim,MaxValue);
    
%% %%%% 方法二
fun = inline('5*x.^4-x.^3+2*x.^2+3*x-8','x');  %%%% 定义函数
x   = -2+4*rand(10000,1);   %%%% 产生[-2,2]中的10000个均匀分布随机数
y   = fun(x);      %%%% 利用fun求在各个离散点处的函数值

Optim   = x(1);    %%%% 预先设定初始最小值
MaxValue= y(1);    %%%% 设置最小函数值

for k=1:length(x)
    if y(k)<MaxValue   %%% 对比函数值，寻找最小
        Optim= x(k);
        MaxValue=y(k);
    end
end
fprintf('最小值点是%3.4f,对应最小值是%3.4f\n',Optim,MaxValue);





